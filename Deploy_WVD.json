{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "KlantAfkorting": {
        "minLength": 2,
        "maxLength": 3,
        "type": "string"
      },
      "adminUsername": {
        "type": "string",
        "defaultValue": "arcusadmin",
        "metadata": {
          "description": "Username for the Virtual Machine."
        }
      },
      "adminPassword": {
        "type": "securestring",
        "minLength": 12,
        "metadata": {
          "description": "Password for the Virtual Machine."
        }
      },
      "vnetAddressPrefix": {
        "type": "string",
        "defaultValue": "10.0.0.0/16"
      },
      "ProdSubnet": {
        "type": "string",
        "defaultValue": "10.0.0.0/24"
      },
      "VmAdds01Ip": {
        "type": "string",
        "defaultValue": "10.0.0.11"
      },
      "VmAdds02Ip": {
        "type": "string",
        "defaultValue": "10.0.0.12"
      },     
      "WebSubnet": {
        "type": "string",
        "defaultValue": "10.0.1.0/24"
      },
      "BastionSubnet": {
        "type": "string",
        "defaultValue": "10.0.3.0/24"
      }
    },
    "variables": {
        "upcase_ka": "[toUpper(parameters('KlantAfkorting'))]",
        "lwcase_ka": "[toLower(parameters('KlantAfkorting'))]",
        "nsgName": "Nsg-sub-prod-01",
        "nsgName2": "Nsg-sub-web-01",
        "location": "[resourceGroup().location]",
        "vmSize": "Standard_B2ms",
        "vmName": "[concat(variables('upcase_ka'),'-ADDS01')]",
        "vmName2": "[concat(variables('upcase_ka'),'-ADDS02')]",
        "nicName": "[concat(variables('vmName'),'-NIC-01')]",
        "nicName2": "[concat(variables('vmName2'),'-NIC-01')]",
        "OSVersion": "2019-Datacenter",
        "storageAccountName": "[concat(variables('lwcase_ka'),'adds01storage')]",
        "storageAccountName2": "[concat(variables('lwcase_ka'),'adds02storage')]",
        "storageAccountType": "Standard_LRS",
        "vnetName": "[concat(variables('upcase_ka'),'-prod-vNet')]",
        "subnet1Name": "Sub-prod-01",
        "subnet2Name": "Sub-web-01",
        "public-ip-address-name": "[concat(variables('upcase_ka'),'-pip')]",
        "bastion-subnet-name": "AzureBastionSubnet",
        "bastion-name": "Sub-bastion-01",
        "automationName": "[concat(variables('upcase_ka'),'-Automation-01')]",
        "workspaceName": "[concat(variables('upcase_ka'),'-LogAnalytics-Workspace-01')]",
        "recoveryserviceName": "[concat(variables('upcase_ka'),'-RS-01')]",
        "policyName": "DefaultBackupPolicy",
        "backupTime": "03:00"
    },
    "resources": [
      {
          "type": "Microsoft.Network/networkSecurityGroups",
          "apiVersion": "2020-05-01",
          "name": "[variables('nsgName')]",
          "location": "[variables('location')]",
          "properties": {
              "securityRules": []
          }
      },
      {
          "type": "Microsoft.Network/networkSecurityGroups",
          "apiVersion": "2020-05-01",
          "name": "[variables('nsgName2')]",
          "location": "[variables('location')]",
          "properties": {
              "securityRules": []
          }
      },
      {
        "type": "Microsoft.Automation/automationAccounts",
        "apiVersion": "2015-10-31",
        "name": "[variables('automationName')]",
        "location": "[variables('location')]",
        "properties": {
            "sku": {
                "name": "Basic"
            }
        }
      },
      {
        "type": "microsoft.operationalinsights/workspaces",
        "apiVersion": "2020-10-01",
        "name": "[variables('workspaceName')]",
        "location": "[variables('location')]",
        "properties": {
            "sku": {
                "name": "pergb2018"
            },
            "retentionInDays": 30,
            "workspaceCapping": {
                "dailyQuotaGb": -1
            },
            "publicNetworkAccessForIngestion": "Enabled",
            "publicNetworkAccessForQuery": "Enabled"
        }
      },
      {
        "type": "Microsoft.Network/virtualNetworks",
        "apiVersion": "2020-05-01",
        "name": "[variables('vnetName')]",
        "location": "[variables('location')]",
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "[parameters('vnetAddressPrefix')]"
            ]
          }
        },
        "resources": [
          {
            "type": "subnets",
            "apiVersion": "2020-05-01",
            "location": "[variables('location')]",
            "name": "[variables('subnet1Name')]",
            "dependsOn": [
              "[variables('vnetName')]"
            ],
            "properties": {
              "addressPrefix": "[parameters('ProdSubnet')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
              }
            }
          },
          {
            "type": "subnets",
            "apiVersion": "2020-05-01",
            "location": "[variables('location')]",
            "name": "[variables('subnet2Name')]",
            "dependsOn": [
              "[variables('vnetName')]",
              "[variables('subnet1Name')]"
            ],
            "properties": {
              "addressPrefix": "[parameters('WebSubnet')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName2'))]"
              }
            }
          },
          {       
            "type": "subnets",
            "apiVersion": "2020-05-01",
            "location": "[variables('location')]",
            "name": "[variables('bastion-subnet-name')]",
            "dependsOn": [
              "[variables('vnetName')]",
              "[variables('subnet1Name')]",
              "[variables('subnet2Name')]"
            ],
            "properties": {
                "addressPrefix": "[parameters('BastionSubnet')]"
            }
          }
        ]
      },
      {
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2019-06-01",
        "name": "[variables('storageAccountName')]",
        "location": "[variables('location')]",
        "sku": {
          "name": "[variables('storageAccountType')]"
        },
        "kind": "Storage",
        "properties": {}
      },
      {
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2019-06-01",
        "name": "[variables('storageAccountName2')]",
        "location": "[variables('location')]",
        "sku": {
          "name": "[variables('storageAccountType')]"
        },
        "kind": "Storage",
        "properties": {}
      },
      {
        "apiVersion": "2020-05-01",
        "type": "Microsoft.Network/publicIpAddresses",
        "name": "[variables('public-ip-address-name')]",
        "location": "[variables('location')]",
        "sku": {
            "name": "Standard"
        },
        "properties": {
            "publicIPAllocationMethod": "Static"
        }
      },
      {
        "type": "Microsoft.Network/networkInterfaces",
        "apiVersion": "2020-06-01",
        "name": "[variables('nicName')]",
        "location": "[variables('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAddress": "[parameters('VmAdds01Ip')]",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                  "id": "[concat(resourceId('Microsoft.Network/virtualNetworks',variables('vnetName')),'/subnets/', variables('subnet1Name'))]"
                },
                "primary": true,
                "privateIPAddressVersion": "IPv4"
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Network/networkInterfaces",
        "apiVersion": "2020-06-01",
        "name": "[variables('nicName2')]",
        "location": "[variables('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAddress": "[parameters('VmAdds02Ip')]",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                  "id": "[concat(resourceId('Microsoft.Network/virtualNetworks',variables('vnetName')),'/subnets/', variables('subnet1Name'))]"
                },
                "primary": true,
                "privateIPAddressVersion": "IPv4"
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines",
        "apiVersion": "2020-06-01",
        "name": "[variables('vmName')]",
        "location": "[variables('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
          "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
        ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "[variables('vmSize')]"
          },
          "osProfile": {
            "computerName": "[variables('vmName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "MicrosoftWindowsServer",
              "offer": "WindowsServer",
              "sku": "[variables('OSVersion')]",
              "version": "latest"
            },
            "osDisk": {
              "createOption": "FromImage",
              "managedDisk": {
                "storageAccountType": "StandardSSD_LRS"
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
              }
            ]
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "enabled": true,
              "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))).primaryEndpoints.blob]"
            }
          }
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines",
        "apiVersion": "2020-06-01",
        "name": "[variables('vmName2')]",
        "location": "[variables('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName2'))]",
          "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName2'))]"
        ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "[variables('vmSize')]"
          },
          "osProfile": {
            "computerName": "[variables('vmName2')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "MicrosoftWindowsServer",
              "offer": "WindowsServer",
              "sku": "[variables('OSVersion')]",
              "version": "latest"
            },
            "osDisk": {
              "createOption": "FromImage",
              "managedDisk": {
                "storageAccountType": "StandardSSD_LRS"
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName2'))]"
              }
            ]
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "enabled": true,
              "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName2'))).primaryEndpoints.blob]"
            }
          }
        }
      },
      {
        "apiVersion": "2020-05-01",
        "type": "Microsoft.Network/bastionHosts",
        "name": "[variables('bastion-name')]",
        "location": "[variables('location')]",
        "dependsOn": [
            "[resourceId('Microsoft.Network/publicIpAddresses', variables('public-ip-address-name'))]",
            "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetname'))]",
            "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetname'), variables('bastion-subnet-name'))]"
        ],
        "properties": {
            "ipConfigurations": [
                {
                    "name": "IpConf",
                    "properties": {
                        "subnet": {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetname'), variables('bastion-subnet-name'))]"
                        },
                        "publicIPAddress": {
                            "id": "[resourceId('Microsoft.Network/publicIpAddresses', variables('public-ip-address-name'))]"
                        }
                    }
                }
            ]
        }
      },
      {
        "type": "Microsoft.RecoveryServices/vaults",
        "apiVersion": "2020-02-02-preview",
        "name": "[variables('recoveryserviceName')]",
        "location": "[variables('location')]",
        "properties": { },
        "sku": {
          "name": "RS0",
          "tier": "Standard"
        }
      },
      {
        "apiVersion": "2016-06-01",
        "name": "[concat(variables('recoveryserviceName'), '/', variables('policyName'))]",
        "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
        "dependsOn": [
          "[concat('Microsoft.RecoveryServices/vaults/', variables('recoveryserviceName'))]"
        ],
        "location": "[variables('location')]",
        "properties": {
          "backupManagementType": "AzureIaasVM",
          "instantRpRetentionRangeInDays": "2",
          "schedulePolicy": {
            "scheduleRunFrequency": "Daily",
            "scheduleRunDays": null,
            "scheduleRunTimes": "[variables('backupTime')]",
            "schedulePolicyType": "SimpleSchedulePolicy"
          },
          "retentionPolicy": {
            "dailySchedule": {
              "retentionTimes": "[variables('backupTime')]",
              "retentionDuration": {
                "count": "30",
                "durationType": "Days"
              }
            },
            "monthlySchedule": {
              "retentionScheduleFormatType": "Daily",
              "retentionScheduleDaily": {
                "daysOfTheMonth": [
                  {
                    "date": 1,
                    "isLast": false
                  }
                ]
              },
              "retentionScheduleWeekly": null,
              "retentionTimes": "[variables('backupTime')]",
              "retentionDuration": {
                "count": "12",
                "durationType": "Months"
              }
            },
            "yearlySchedule": {
              "retentionScheduleFormatType": "Daily",
              "monthsOfYear": "January",
              "retentionScheduleDaily": {
                "daysOfTheMonth": [
                  {
                    "date": 1,
                    "isLast": false
                  }
                ]
              },
              "retentionScheduleWeekly": null,
              "retentionTimes": "[variables('backupTime')]",
              "retentionDuration": {
                "count": "10",
                "durationType": "Years"
              }
            },
            "retentionPolicyType": "LongTermRetentionPolicy"
          },
          "timeZone": "W. Europe Standard Time"
        }
      }
    ]
  }
